name: qr-server
base: core24
version: '1.0.1'
summary: A server to generate QR codes
description: |
  Listen on a port and serve QR codes encoding data from the path or the
  request body.

  For example, if running on localhost and port 5000, then both of the
  following are supported ways to generate a QR code encoding the string
  "hello-there":

  - `curl http://localhost:5000/hello-there`
  - `curl --data-binary 'hello-there' http://localhost:5000`

  If the path following the hostname is non-empty, that will be used as the
  data to encode, and the request body will be ignored.

  By default, listens on port 5000. To listen on another port, use
  `sudo snap set qr-server port=<port>`, with `<port>` being any available
  port number.

  Both GET and POST requests are accepted and may be used interchangeably.

title: QR Server
icon: icon.png
license: MIT
source-code: https://github.com/olivercalder/qr-server
website: https://github.com/olivercalder/qr-server
issues: https://github.com/olivercalder/qr-server/issues

platforms:
  amd64:
  arm64:
  armhf:
  ppc64el:
  riscv64:
  s390x:

grade: stable
confinement: strict

parts:
  qr-server:
    plugin: dump
    source: bin/
    organize:
      qr-server: bin/qr-server
      qr_server.py: bin/qr_server.py
    stage-packages:
      - qrencode

  python-dependencies:
    plugin: python
    source: .
    python-packages:
      - flask

apps:
  qr-server:
    command: bin/qr-server
    daemon: simple
    plugs:
      - network-bind
